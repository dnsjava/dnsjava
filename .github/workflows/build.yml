name: dnsjava CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-18.04, ubuntu-20.04, windows-latest ]
        java: [ '8', '11' ]
        arch: [ 'x86', 'x64' ]
        exclude:
          - os: ubuntu-18.04
            arch: x86
          - os: ubuntu-20.04
            arch: x86

    name: Java ${{ matrix.java }}/${{ matrix.arch }}/${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # for Sonar
          fetch-depth: 0

      - name: Cache Maven dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: m2-cache-${{ matrix.java }}-${{ matrix.arch }}-${{ matrix.os }}

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: ${{ matrix.arch }}

      - name: Build with Maven
        if: "${{ !(matrix.arch == 'x64' && matrix.os == 'ubuntu-20.04' && matrix.java == '11') || github.event.pull_request.head.repo.full_name != 'dnsjava/dnsjava' }}"
        run: mvn verify -B -"Dgpg.skip"

      # doesn't work with PRs from forks, see https://jira.sonarsource.com/browse/MMF-1371
      - name: Build with Maven and run Sonar
        if: "${{ github.event.pull_request.head.repo.full_name == 'dnsjava/dnsjava' && matrix.arch == 'x64' && matrix.os == 'ubuntu-20.04' && matrix.java == '11' }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -X -B -"Dgpg.skip" verify jacoco:report org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Run codecovc
        if: "${{ matrix.arch == 'x64' && matrix.os == 'ubuntu-20.04' && matrix.java == '11' }}"
        uses: codecov/codecov-action@v1

  release:
    if: github.ref == 'refs/heads/master'
    needs: test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1

      - name: Cache Maven dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: m2-cache-8-x64-ubuntu-20.04

      - name: Set up JDK 8
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: '8'
          architecture: 'x64'
          server-id: ossrh
          server-username: SONATYPE_USER
          server-password: SONATYPE_PW

      - name: Release to Maven Central
        env:
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PW: ${{ secrets.SONATYPE_PW }}
        run: |
          cat <(echo -e "${{ secrets.GPG_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
          mvn \
            --no-transfer-progress \
            --batch-mode \
            -Dgpg.passphrase="${{ secrets.GPG_PW }}" \
            -DperformRelease=true \
            deploy
